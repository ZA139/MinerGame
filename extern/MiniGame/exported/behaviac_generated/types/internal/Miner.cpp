// -------------------------------------------------------------------------------
// THIS FILE IS ORIGINALLY GENERATED BY THE DESIGNER.
// YOU ARE ONLY ALLOWED TO MODIFY CODE BETWEEN '///<<< BEGIN' AND '///<<< END'.
// PLEASE MODIFY AND REGENERETE IT IN THE DESIGNER FOR CLASS/MEMBERS/METHODS, ETC.
// -------------------------------------------------------------------------------

#include "Miner.h"
///<<< BEGIN WRITING YOUR CODE FILE_INIT
#include"/data/charlesqliu/MiniMiner/src/MessageSys/MessageMgr.h"
#include"/data/charlesqliu/MiniMiner/src/MessageSys/RelationShipMgr.h"
#include <unistd.h>
#include<string>
#define MinerSay(words,args...) printf("Miner:");printf(words,##args);printf("\n");usleep(500000)
#define WifeSay(words,args...) printf("Wife:");printf(words,##args);printf("\n");usleep(500000)
///<<< END WRITING YOUR CODE

Miner::Miner()
{
	GoldCarried = 0;
	ThirstyTimer = 0;
	TodayGainedGold = 0;
	TotalMoney = 0;
///<<< BEGIN WRITING YOUR CODE CONSTRUCTOR
	srand(time(0));
///<<< END WRITING YOUR CODE
}

Miner::~Miner()
{
///<<< BEGIN WRITING YOUR CODE DESTRUCTOR

///<<< END WRITING YOUR CODE
}

void Miner::EnterMineAndDigForNugget()
{
///<<< BEGIN WRITING YOUR CODE EnterMineAndDigForNugget
	MinerSay("打工啦");
	MinerSay("挖金子");
	ThirstyTimer+=10;
	if(rand()%2){
		MinerSay("挖到金子啦");
		unsigned int got=rand()%3+1;
		if(got==3){
			got=rand()%15+3;
			MinerSay("卧槽，大丰收");
		}
		MinerSay("挖到了%u块金子",got);
		GoldCarried+=got;
	}
	else{
		MinerSay("是个石头。。。");
	}
	MinerSay("我身上有%u个金矿",GoldCarried);
///<<< END WRITING YOUR CODE
}

void Miner::GoToBank()
{
///<<< BEGIN WRITING YOUR CODE GoToBank
	MinerSay("钱太重了，先去银行存钱吧");
	MinerSay("到银行了，可别被抢劫了");
	MinerSay("存完钱了");
	TodayGainedGold+=GoldCarried;
	GoldCarried=0;
	if(TodayGainedGold<7){
		MinerSay("赚的钱太少了，再去下矿吧");
	}
///<<< END WRITING YOUR CODE
}

void Miner::GoToBarDrinkSomeWhiskey()
{
///<<< BEGIN WRITING YOUR CODE GoToBarDrinkSomeWhiskey
	MinerSay("太渴了，去酒吧喝点饮料");
	static char drinks[3][40]={
		"波本威士忌",
		"田纳西威士忌",
		"苏格兰单一麦芽威士忌"
	};
	MinerSay("来一杯%s",drinks[rand()%3]);
	MinerSay("si~~~~~~ah~~~~~~~~~~");
	ThirstyTimer=0;
	MinerSay("去打工了");
///<<< END WRITING YOUR CODE
}

void Miner::Rest()
{
///<<< BEGIN WRITING YOUR CODE Rest
	MessageMgr::Instance().SendMessage(new Message(this,RelationShipMgr::Instance().getWifeInstance(this),MessageType::HOME_SWEET_HOME,0));
	MinerSay("今天挖到了%u块金矿",TodayGainedGold);
	MinerSay("太累了，回家睡一觉");
	static char BossCars[6][40]={
		"兰博基尼",
		"迈凯伦",
		"法拉利",
		"保时捷",
		"阿尔法罗密欧",
		"AMG"	
	};
	MinerSay("听说老板又喜提一辆%s",BossCars[rand()%6]);
	TotalMoney+=TodayGainedGold;
	MinerSay("到家了，现在有%u块金矿",TotalMoney);
	MinerSay("开始睡觉");
	for(int i=0;i<10;i++){
		if(!isHandlingMessage){
			MinerSay("ZZZ~~~~~~~~~~");
		}
		else {i--;}
	}
	MinerSay("又是元气满满的一天");
	TodayGainedGold=0;
///<<< END WRITING YOUR CODE
}

std::string Miner::HandleMessage(Message * message)
{
	switch(message->type) {
		case MessageType::FOOD_IS_READY: {
			isHandlingMessage=true;
			WifeSay("饭好了，来吃吧");
			MinerSay("来了");
			for (int i = 0; i < 2; i++) {
				MinerSay("吃饭中。。");
				WifeSay("吃饭中。。");
			}
			MinerSay("今天饭很好吃，谢谢lp，我来洗碗");
			for (int i = 0; i < 2; i++) {
				MinerSay("洗碗。。");
				WifeSay("。。");
			}
			isHandlingMessage= false;
			break;
		}
		default:
			return std::string("不支持的消息类型");
	}
	return std::string();
}	


///<<< BEGIN WRITING YOUR CODE FILE_UNINIT

///<<< END WRITING YOUR CODE
